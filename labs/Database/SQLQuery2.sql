--INNER JOIN
use SAMPLEDB;
select * from TBLEMPLOYEE;
select * from DEPARTMENT;

SELECT E.ID,E.NAME,E.GENDER,D.DEPARTMENTNAME FROM 
TBLEMPLOYEE E INNER JOIN DEPARTMENT D ON E.DEPID=D.ID;

SELECT E.ID,E.NAME,E.GENDER,D.DEPARTMENTNAME FROM 
TBLEMPLOYEE E LEFT JOIN DEPARTMENT D ON E.DEPID=D.ID;

SELECT E.ID,E.NAME,E.GENDER,D.DEPARTMENTNAME FROM 
TBLEMPLOYEE E RIGHT JOIN DEPARTMENT D ON E.DEPID=D.ID;

SELECT E.ID,E.NAME,E.GENDER,D.DEPARTMENTNAME FROM 
TBLEMPLOYEE E FULL OUTER JOIN DEPARTMENT D ON E.DEPID=D.ID;

ALTER TABLE TBLEMPLOYEE ADD  MANAGERID INT;

SELECT E.NAME AS EMPLOYEENAME ,M.NAME AS MANAGERNAME
FROM TBLEMPLOYEE E LEFT JOIN TBLEMPLOYEE M ON E.MANAGERID=M.ID;

CREATE TABLE SALES (SALEDID INT IDENTITY(1,1) PRIMARY KEY,PRODUCT VARCHAR(200),QUANTITY INT,PRICE INT,SALEDATE DATETIME);

SELECT GETDATE()
INSERT INTO SALES VALUES('LAPTOP',2,1200,GETDATE());
INSERT INTO SALES VALUES('LAPTOP',1,1200,GETDATE());
INSERT INTO SALES VALUES('PHONE',5,600,GETDATE());
INSERT INTO SALES VALUES('PHONE',3,600,GETDATE());
INSERT INTO SALES VALUES('TABLET',4,800,GETDATE());

SELECT * FROM SALES;

SELECT PRODUCT,SUM(QUANTITY) AS TOTALQUANTITY FROM 
SALES GROUP BY PRODUCT HAVING SUM(QUANTITY)>3;

SELECT PRODUCT,MAX(QUANTITY) AS TOTALQUANTITY FROM 
SALES GROUP BY PRODUCT

SELECT PRODUCT,MIN(QUANTITY) AS TOTALQUANTITY FROM 
SALES GROUP BY PRODUCT

SELECT PRODUCT,AVG(QUANTITY) AS TOTALQUANTITY FROM 
SALES GROUP BY PRODUCT

SELECT COUNT(*) FROM SALES
/*
	-TABLES
	-FUNCTIONS
	-PROCEDURES
	-VIEWS
	-TRIGGERS
	-EXCEPCTION HANDLING
*/

CREATE FUNCTION CALCULATETOTALPRICE(@PRICE DECIMAL(10,2),@TEXRATE DECIMAL(5,2))
RETURNS DECIMAL(10,2)
AS 
BEGIN
DECLARE @TOTALPRICE DECIMAL(10,2);
SET @TOTALPRICE=@PRICE+(@PRICE*@TEXRATE/100);
RETURN @TOTALPRICE;

END;

SELECT DBO.CALCULATETOTALPRICE(100,5) AS TOTALPRICE;

CREATE FUNCTION GETHIGHTPAIDEMPLOYEES(@MINSALARY DECIMAL(10,2))
RETURNS TABLE
AS
RETURN (SELECT ID,NAME,SALARY FROM TBLEMPLOYEE WHERE SALARY> @MINSALARY);

SELECT * FROM DBO.GETHIGHTPAIDEMPLOYEES(10000);

SELECT * FROM TBLEMPLOYEE;

CREATE PROCEDURE INSERTEMPLOYEE(@NAME NVARCHAR(50),@GENDER VARCHAR(1),
@DEPID INT,
@MANAGERID INT,@SALARY DECIMAL(10,2))
AS
BEGIN
INSERT INTO TBLEMPLOYEE VALUES(@NAME,@GENDER,@DEPID,@MANAGERID,@SALARY);
SELECT SCOPE_IDENTITY() AS NEWEMPLOYEEID;
END;

EXEC INSERTEMPLOYEE 'SUDIP','M',7,1,8000;

SELECT * FROM TBLEMPLOYEE;
